//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** A destination for OpenPay payments 
 */
public class PaymentDestination: Codable {

    /** The OpenPay account identifier */
    public var id: String

    /** The amount to be credited to the destination in the major currency unit */
    public var amount: Int

    public init(id: String, amount: Int) {
        self.id = id
        self.amount = amount
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case amount
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        id = try container.decode(.id)
        amount = try container.decode(.amount)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(id, forKey: .id)
        try container.encode(amount, forKey: .amount)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? PaymentDestination else { return false }
      guard self.id == object.id else { return false }
      guard self.amount == object.amount else { return false }
      return true
    }

    public static func == (lhs: PaymentDestination, rhs: PaymentDestination) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
