//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** The customer to which this payment is linked */
public class PaymentResponseCustomer: Codable {

    /** The unique identifier of the customer. This can be passed as a source when making a payment */
    public var id: String

    /** The customer email address */
    public var email: String?

    /** The customer name */
    public var name: String?

    public init(id: String, email: String? = nil, name: String? = nil) {
        self.id = id
        self.email = email
        self.name = name
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case email
        case name
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        id = try container.decode(.id)
        email = try container.decodeIfPresent(.email)
        name = try container.decodeIfPresent(.name)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(id, forKey: .id)
        try container.encodeIfPresent(email, forKey: .email)
        try container.encodeIfPresent(name, forKey: .name)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? PaymentResponseCustomer else { return false }
      guard self.id == object.id else { return false }
      guard self.email == object.email else { return false }
      guard self.name == object.name else { return false }
      return true
    }

    public static func == (lhs: PaymentResponseCustomer, rhs: PaymentResponseCustomer) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
